<tool id="autospill" name="Autospill" version="0.1.0+galaxy0" python_template_version="3.5">
    <requirements>
      <requirement type="package" version="0.1.0">r-autospill</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
      mkdir input_dir;
      #for $fcs in $fcs_list:
        ln -s '$fcs' input_dir/'$fcs.element_identifier';
      #end for 

      ## TODO Check that tabular file has the same number of lines that the collection of fcs files.
      ## Check that files given in the tabular file exist in the inputs directory.

      Rscript '$auto_spill_calculate_compensate' input_dir '$fcs_metadata' '$param_set'
      ]]></command>
     <configfiles>
      <configfile name="auto_spill_calculate_compensate"><![CDATA[
## calculate_compensation_paper.r
##
## Copyright (c) 2020 VIB (Belgium) and Babraham Institute (United Kingdom)
##
## Software written by Carlos P. Roca, as research funded by the European Union.
##
## This software may be modified and distributed under the terms of the MIT
## license. See the LICENSE file for details.
## Runs a calculation of compensation with autospill, creating all figures and
## tables used in autospill paper.
##
## Requires being called as a batch script with the following two arguments:
##     control.dir    directory with the set of single-color controls
##     control.def.file    csv file defining the names and channels of the
##         single-color controls


library( autospill )


## get directory and csv file with definition of control dataset

args <- commandArgs( TRUE )

if ( length( args ) != 3 ) {
    cat( "ERROR: no arguments with directory, csv file with definition of control dataset and parameter set",
        file = stderr() )
    stop()
}


control.dir <- args[[ 1 ]]
control.def.file <- args[[ 2 ]]
param_set<-args[[3]]

asp <- get.autospill.param(param_set)

flow.control <- read.flow.control( control.dir, control.def.file, asp )

## gate events before calculating spillover

flow.gate <- gate.flow.data( flow.control, asp )


## get initial spillover matrices from untransformed data

marker.spillover.unco.untr <- get.marker.spillover( TRUE, flow.gate,
    flow.control, asp )


## refine spillover matrix iteratively

refine.spillover.result <- refine.spillover( marker.spillover.unco.untr,
  NULL, flow.gate, flow.control, asp )

## Write outputs
write.table(refine.spillover.result\$spillover, file = "spillover.txt", sep="\t", col.names = NA, quote=FALSE)
write.table(refine.spillover.result\$compensation, file = "compensation.txt", sep="\t", col.names = NA, quote=FALSE)
write.table(refine.spillover.result\$convergence, file = "convergence.txt", sep="\t", row.names=FALSE, quote=FALSE)
write.table(refine.spillover.result\$error\$inte, file = "error_inte.txt", sep="\t", col.names=NA, quote=FALSE)
write.table(refine.spillover.result\$error\$coef, file = "error_coef.txt", sep="\t", col.names=NA, quote=FALSE)
write.table(refine.spillover.result\$error\$slop, file = "error_slop.txt", sep="\t", col.names=NA, quote=FALSE)
write.table(refine.spillover.result\$error\$skew, file = "error_skew.txt", sep="\t", col.names=NA, quote=FALSE)



            ]]></configfile>
    </configfiles>

     <inputs>
        <param type="data" name="fcs_list" format="fcs" multiple="true" label="Collection of control FCS files" />
        <param type="data" name="fcs_metadata" format="csv" label="Auxiliary control file" help="Contains metadata for control list. It has to match original names of FCS files uploaded, and those files need to be present in the Collection of control FCS files given." />
        <param name="param_set" type="select" label="Parameter set" help="Predefined auto-spill parameters set, choose from 'Minimal', 'Final step', 'Paper', or 'Website'">
          <option value="minimal" selected="true">Minimal</option>
          <option value="final.step">Final step</option>
          <option value="paper">Paper</option>
          <option value="website">Website</option>
        </param>
    </inputs>
    <outputs>
      <data name="spillover_matrix" format="tabular" from_work_dir="spillover.txt" label="${tool.name} spillover matrix on ${on_string}"/>
      <data name="compensation_matrix" format="tabular" from_work_dir="compensation.txt" label="${tool.name} compensation matrix on ${on_string}"/>
      <data name="convergence_matrix" format="tabular" from_work_dir="convergence.txt" label="${tool.name} convergence table on ${on_string}"/>
      <data name="error_inte_matrix" format="tabular" from_work_dir="error_inte.txt" label="${tool.name} error intercepts matrix on ${on_string}"/>
      <data name="error_coef_matrix" format="tabular" from_work_dir="error_coef.txt" label="${tool.name} error coefficients matrix on ${on_string}"/>
      <data name="error_skew_matrix" format="tabular" from_work_dir="error_skew.txt" label="${tool.name} error skewness matrix on ${on_string}"/>
      <!-- <data name="plot_results" format="pdf" from_work_dir="plot_results.pdf" label="${tool.name} results plot on ${on_string}"/> -->
      <!-- <data name="plot_convergence" format="pdf" from_work_dir="plot_convergence.pdf" label="${tool.name} convergence plot on ${on_string}"/> -->
    </outputs>
    <tests>
        <test>
            <param name="input1" value="control_dir"/>
            <param name="input2" value="control_file"/>
            <output name="output1" file="output"/>
        </test>
    </tests>
    <help><![CDATA[
        TODO: Fill in help.
    ]]></help>
    <citations>
        <citation type="bibtex">
@misc{githubautospill,
  author = {Roca, Carlos},
  year = {2020},
  title = {autospill algorithm for calculating spillover coefficients, used to compensate or unmix flow cytometry data.},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/carlosproca/autospill},
  }</citation>
    <citation type="doi">10.1101/2020.06.29.177196</citation>
    </citations>
</tool>
